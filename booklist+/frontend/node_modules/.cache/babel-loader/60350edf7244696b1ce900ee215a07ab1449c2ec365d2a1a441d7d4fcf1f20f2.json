{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n// Початковий стан\nconst initialState = {\n  books: [],\n  loading: false,\n  error: null\n};\n\n// Асинхронна дія для отримання книг з бекенду\nexport const fetchBooks = createAsyncThunk('books/fetchBooks', async () => {\n  const response = await axios.get('http://127.0.0.1:5000/api/books');\n  return response.data;\n});\n\n// Асинхронна дія для додавання книги\nexport const addBook = createAsyncThunk('books/addBook', async newBook => {\n  const response = await axios.post('http://127.0.0.1:5000/api/books', newBook, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return response.data;\n});\n\n// Асинхронна дія для видалення книги\nexport const deleteBook = createAsyncThunk('books/deleteBook', async id => {\n  await axios.delete(`http://127.0.0.1:5000/api/books/${id}`);\n  return id;\n});\n\n// Асинхронна дія для редагування книги\nexport const editBook = createAsyncThunk('books/editBook', async editedBook => {\n  const response = await axios.put(`http://127.0.0.1:5000/api/books/${editedBook.id}`, editedBook);\n  return response.data;\n});\n\n// Слайс для книг\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Обробка fetchBooks\n    .addCase(fetchBooks.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchBooks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.books = action.payload;\n    }).addCase(fetchBooks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch books';\n    })\n\n    // Обробка addBook\n    .addCase(addBook.fulfilled, (state, action) => {\n      state.books.push(action.payload);\n    })\n\n    // Обробка deleteBook\n    .addCase(deleteBook.fulfilled, (state, action) => {\n      state.books = state.books.filter(book => book.id !== action.payload);\n    })\n\n    // Обробка editBook\n    .addCase(editBook.fulfilled, (state, action) => {\n      const index = state.books.findIndex(book => book.id === action.payload.id);\n      if (index !== -1) {\n        state.books[index] = action.payload;\n      }\n    });\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","books","loading","error","fetchBooks","response","get","data","addBook","newBook","post","headers","deleteBook","id","delete","editBook","editedBook","put","bookSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","filter","book","index","findIndex","reducer"],"sources":["C:/Users/User/lenovo/portfolio_mafia/booklist/frontend/src/redux/bookSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface Book {\r\n  id: number;\r\n  title: string;\r\n  author: string;\r\n  genre: string;\r\n  rating: number;\r\n  progress: number;\r\n}\r\n\r\ninterface BookState {\r\n  books: Book[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Початковий стан\r\nconst initialState: BookState = {\r\n  books: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Асинхронна дія для отримання книг з бекенду\r\nexport const fetchBooks = createAsyncThunk('books/fetchBooks', async () => {\r\n  const response = await axios.get('http://127.0.0.1:5000/api/books');\r\n  return response.data;\r\n});\r\n\r\n// Асинхронна дія для додавання книги\r\nexport const addBook = createAsyncThunk('books/addBook', async (newBook: Omit<Book, 'id'>) => {\r\n  const response = await axios.post('http://127.0.0.1:5000/api/books', newBook, { headers: {\r\n    'Content-Type': 'application/json',\r\n}});\r\n  return response.data;\r\n});\r\n\r\n// Асинхронна дія для видалення книги\r\nexport const deleteBook = createAsyncThunk('books/deleteBook', async (id: number) => {\r\n  await axios.delete(`http://127.0.0.1:5000/api/books/${id}`);\r\n  return id;\r\n});\r\n\r\n// Асинхронна дія для редагування книги\r\nexport const editBook = createAsyncThunk('books/editBook', async (editedBook: Book) => {\r\n  const response = await axios.put(`http://127.0.0.1:5000/api/books/${editedBook.id}`, editedBook);\r\n  return response.data;\r\n});\r\n\r\n// Слайс для книг\r\nconst bookSlice = createSlice({\r\n  name: 'books',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Обробка fetchBooks\r\n      .addCase(fetchBooks.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchBooks.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.books = action.payload;\r\n      })\r\n      .addCase(fetchBooks.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || 'Failed to fetch books';\r\n      })\r\n\r\n      // Обробка addBook\r\n      .addCase(addBook.fulfilled, (state, action) => {\r\n        state.books.push(action.payload);\r\n      })\r\n\r\n      // Обробка deleteBook\r\n      .addCase(deleteBook.fulfilled, (state, action) => {\r\n        state.books = state.books.filter((book) => book.id !== action.payload);\r\n      })\r\n\r\n      // Обробка editBook\r\n      .addCase(editBook.fulfilled, (state, action) => {\r\n        const index = state.books.findIndex((book) => book.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.books[index] = action.payload;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport default bookSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
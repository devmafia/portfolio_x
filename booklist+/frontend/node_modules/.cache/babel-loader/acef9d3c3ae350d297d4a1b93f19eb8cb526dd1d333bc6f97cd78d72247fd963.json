{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport bookReducer from './bookSlice';\nimport { useDispatch } from 'react-redux';\nexport const store = configureStore({\n  reducer: {\n    books: bookReducer\n  }\n});\n\n// Типізація кореневого стану\n\n// Типізація Dispatch\n\n// Тип для асинхронних дій\n\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","bookReducer","useDispatch","store","reducer","books","useAppDispatch","_s"],"sources":["C:/Users/User/lenovo/htdocs/Flask/booklist/frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport bookReducer from './bookSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    books: bookReducer,\r\n  },\r\n});\r\n\r\n// Типізація кореневого стану\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// Типізація Dispatch\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// Тип для асинхронних дій\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n"],"mappings":";AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,KAAK,EAAEJ;EACT;AACF,CAAC,CAAC;;AAEF;;AAGA;;AAGA;;AAQA,OAAO,MAAMK,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,WAAW,CAAc,CAAC;AAAA;AAACK,EAAA,CAAlDD,cAAc;EAAA,QAASJ,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
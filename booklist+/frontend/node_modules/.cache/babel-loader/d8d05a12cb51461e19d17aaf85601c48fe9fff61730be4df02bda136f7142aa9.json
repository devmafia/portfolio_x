{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import bookReducer from'./bookSlice';import{useDispatch}from'react-redux';export const store=configureStore({reducer:{books:bookReducer}});// Типізація кореневого стану\n// Типізація Dispatch\n// Тип для асинхронних дій\nexport const useAppDispatch=()=>useDispatch();","map":{"version":3,"names":["configureStore","bookReducer","useDispatch","store","reducer","books","useAppDispatch"],"sources":["C:/Users/User/lenovo/htdocs/Flask/booklist/frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport bookReducer from './bookSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    books: bookReducer,\r\n  },\r\n});\r\n\r\n// Типізація кореневого стану\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// Типізація Dispatch\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// Тип для асинхронних дій\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n"],"mappings":"AAAA,OAASA,cAAc,KAA6B,kBAAkB,CACtE,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,OAASC,WAAW,KAAQ,aAAa,CAEzC,MAAO,MAAM,CAAAC,KAAK,CAAGH,cAAc,CAAC,CAClCI,OAAO,CAAE,CACPC,KAAK,CAAEJ,WACT,CACF,CAAC,CAAC,CAEF;AAGA;AAGA;AAQA,MAAO,MAAM,CAAAK,cAAc,CAAGA,CAAA,GAAMJ,WAAW,CAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\lenovo\\\\htdocs\\\\Reactjs_practice\\\\quiz\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(questions.length).fill(null));\n  const [correctCount, setCorrectCount] = useState(null);\n  const handleAnswerClick = (questionIndex, isCorrect) => {\n    if (selectedAnswers[questionIndex] !== null) return; // prevent changing answer after first selection\n\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[questionIndex] = isCorrect;\n    setSelectedAnswers(updatedAnswers);\n    if (isCorrect) {\n      setCorrectCount(prev => prev !== null ? prev + 1 : 1);\n    }\n  };\n  const calculateScore = () => {\n    setCorrectCount(selectedAnswers.filter(answer => answer === true).length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerClick(questionIndex, answer.isCorrect),\n            style: {\n              backgroundColor: selectedAnswers[questionIndex] !== null ? answer.isCorrect ? 'green' : selectedAnswers[questionIndex] === false && answer.isCorrect === false ? 'red' : '' : ''\n            },\n            disabled: selectedAnswers[questionIndex] !== null,\n            children: answer.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, answerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateScore,\n      disabled: correctCount !== null,\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), correctCount !== null && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"You got \", correctCount, \" out of \", questions.length, \" correct!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"tXVGzFCvy75p88iDe6rO4fBeKOo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","questions","_s","selectedAnswers","setSelectedAnswers","Array","length","fill","correctCount","setCorrectCount","handleAnswerClick","questionIndex","isCorrect","updatedAnswers","prev","calculateScore","filter","answer","children","map","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","answerIndex","onClick","style","backgroundColor","disabled","text","_c","$RefreshReg$"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface Answer {\r\n  text: string;\r\n  isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n  question: string;\r\n  answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n  questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n  const [selectedAnswers, setSelectedAnswers] = useState<(boolean | null)[]>(Array(questions.length).fill(null));\r\n  const [correctCount, setCorrectCount] = useState<number | null>(null);\r\n\r\n  const handleAnswerClick = (questionIndex: number, isCorrect: boolean) => {\r\n    if (selectedAnswers[questionIndex] !== null) return; // prevent changing answer after first selection\r\n    \r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[questionIndex] = isCorrect;\r\n    setSelectedAnswers(updatedAnswers);\r\n\r\n    if (isCorrect) {\r\n      setCorrectCount((prev) => (prev !== null ? prev + 1 : 1));\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    setCorrectCount(selectedAnswers.filter((answer) => answer === true).length);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questions.map((question, questionIndex) => (\r\n        <div key={questionIndex}>\r\n          <h3>{question.question}</h3>\r\n          <ul>\r\n            {question.answers.map((answer, answerIndex) => (\r\n              <li key={answerIndex}>\r\n                <button\r\n                  onClick={() => handleAnswerClick(questionIndex, answer.isCorrect)}\r\n                  style={{\r\n                    backgroundColor:\r\n                      selectedAnswers[questionIndex] !== null\r\n                        ? answer.isCorrect\r\n                          ? 'green'\r\n                          : selectedAnswers[questionIndex] === false && answer.isCorrect === false\r\n                          ? 'red'\r\n                          : ''\r\n                        : '',\r\n                  }}\r\n                  disabled={selectedAnswers[questionIndex] !== null}\r\n                >\r\n                  {answer.text}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n      <button onClick={calculateScore} disabled={correctCount !== null}>\r\n        Show Results\r\n      </button>\r\n      {correctCount !== null && <h4>You got {correctCount} out of {questions.length} correct!</h4>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
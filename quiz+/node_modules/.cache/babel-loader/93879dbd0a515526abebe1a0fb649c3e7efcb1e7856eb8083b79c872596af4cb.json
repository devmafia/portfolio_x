{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\lenovo\\\\htdocs\\\\Reactjs_practice\\\\quiz\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(questions.length).fill(null));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctCount, setCorrectCount] = useState(null);\n  const handleAnswerClick = isCorrect => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[currentQuestionIndex] = isCorrect;\n    setSelectedAnswers(updatedAnswers);\n    if (isCorrect) {\n      setCorrectCount(prev => prev !== null ? prev + 1 : 1);\n    }\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const calculateScore = () => {\n    setCorrectCount(selectedAnswers.filter(answer => answer === true).length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"questionHeader\",\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"questionText\",\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answerList\",\n      children: questions[currentQuestionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"answerItem\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerClick(answer.isCorrect),\n          className: \"answerButton\",\n          style: {\n            backgroundColor: selectedAnswers[currentQuestionIndex] !== null ? answer.isCorrect ? 'green' : 'lightgrey' : 'lightgrey',\n            color: selectedAnswers[currentQuestionIndex] !== null ? '#fff' : '#000'\n          },\n          disabled: selectedAnswers[currentQuestionIndex] !== null,\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: nextQuestion,\n      disabled: selectedAnswers[currentQuestionIndex] === null,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: calculateScore,\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressContainer\",\n      children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progressCircle ${selectedAnswers[index] === true ? 'greenCircle' : ''}`,\n        children: selectedAnswers[index] === true ? '✓' : ''\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), correctCount !== null && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"resultText\",\n      children: [\"You got \", correctCount, \" out of \", questions.length, \" correct!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"rmrZTkaIC2ji4RgF9KrIklHqi0s=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","questions","_s","selectedAnswers","setSelectedAnswers","Array","length","fill","currentQuestionIndex","setCurrentQuestionIndex","correctCount","setCorrectCount","handleAnswerClick","isCorrect","updatedAnswers","prev","nextQuestion","calculateScore","filter","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","answers","map","index","onClick","style","backgroundColor","color","disabled","text","_","_c","$RefreshReg$"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.css';\r\n\r\ninterface Answer {\r\n    text: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n    questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n    const [selectedAnswers, setSelectedAnswers] = useState<(boolean | null)[]>(Array(questions.length).fill(null));\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState<number | null>(null);\r\n\r\n    const handleAnswerClick = (isCorrect: boolean) => {\r\n        const updatedAnswers = [...selectedAnswers];\r\n        updatedAnswers[currentQuestionIndex] = isCorrect;\r\n        setSelectedAnswers(updatedAnswers);\r\n\r\n        if (isCorrect) {\r\n            setCorrectCount((prev) => (prev !== null ? prev + 1 : 1));\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        }\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        setCorrectCount(selectedAnswers.filter((answer) => answer === true).length);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='questionHeader'>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <hr />\r\n            <h3 className='questionText'>{questions[currentQuestionIndex].question}</h3>\r\n            <ul className='answerList'>\r\n                {questions[currentQuestionIndex].answers.map((answer, index) => (\r\n                    <li key={index} className='answerItem'>\r\n                        <button\r\n                            onClick={() => handleAnswerClick(answer.isCorrect)}\r\n                            className='answerButton'\r\n                            style={{\r\n                                backgroundColor:\r\n                                    selectedAnswers[currentQuestionIndex] !== null\r\n                                        ? answer.isCorrect\r\n                                            ? 'green'\r\n                                            : 'lightgrey'\r\n                                        : 'lightgrey',\r\n                                color: selectedAnswers[currentQuestionIndex] !== null ? '#fff' : '#000',\r\n                            }}\r\n                            disabled={selectedAnswers[currentQuestionIndex] !== null}\r\n                        >\r\n                            {answer.text}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n                <button className='nextButton' onClick={nextQuestion} disabled={selectedAnswers[currentQuestionIndex] === null}>\r\n                    Next\r\n                </button>\r\n            ) : (\r\n                <button className='nextButton' onClick={calculateScore}>\r\n                    Show Results\r\n                </button>\r\n            )}\r\n\r\n            <div className='progressContainer'>\r\n                {questions.map((_, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`progressCircle ${selectedAnswers[index] === true ? 'greenCircle' : ''}`}\r\n                    >\r\n                        {selectedAnswers[index] === true ? '✓' : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {correctCount !== null && (\r\n                <h4 className='resultText'>\r\n                    You got {correctCount} out of {questions.length} correct!\r\n                </h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
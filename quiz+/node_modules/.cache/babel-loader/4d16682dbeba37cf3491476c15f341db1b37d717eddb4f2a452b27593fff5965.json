{"ast":null,"code":"import React,{useState}from'react';import'../styles/styles.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Quiz=_ref=>{let{questions}=_ref;const[selectedAnswers,setSelectedAnswers]=useState(Array(questions.length).fill(null));const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[correctCount,setCorrectCount]=useState(null);const handleAnswerClick=isCorrect=>{const updatedAnswers=[...selectedAnswers];updatedAnswers[currentQuestionIndex]=isCorrect;setSelectedAnswers(updatedAnswers);if(isCorrect){setCorrectCount(prev=>prev!==null?prev+1:1);}};const nextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const calculateScore=()=>{setCorrectCount(selectedAnswers.filter(answer=>answer===true).length);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"questionHeader\",children:[\"Question \",currentQuestionIndex+1,\" of \",questions.length]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{className:\"questionText\",children:questions[currentQuestionIndex].question}),/*#__PURE__*/_jsx(\"ul\",{className:\"answerList\",children:questions[currentQuestionIndex].answers.map((answer,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"answerItem\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerClick(answer.isCorrect),className:\"answerButton\",style:{backgroundColor:selectedAnswers[currentQuestionIndex]!==null?answer.isCorrect?'green':'lightgrey':'lightgrey',color:selectedAnswers[currentQuestionIndex]!==null?'#fff':'#000'},disabled:selectedAnswers[currentQuestionIndex]!==null,children:answer.text})},index))}),currentQuestionIndex<questions.length-1?/*#__PURE__*/_jsx(\"button\",{className:\"nextButton\",onClick:nextQuestion,disabled:selectedAnswers[currentQuestionIndex]===null,children:\"Next\"}):/*#__PURE__*/_jsx(\"button\",{className:\"nextButton\",onClick:calculateScore,children:\"Show Results\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progressContainer\",children:questions.map((_,index)=>/*#__PURE__*/_jsx(\"div\",{className:`progressCircle ${selectedAnswers[index]===true?'greenCircle':''}`,children:selectedAnswers[index]===true?'✓':''},index))}),correctCount!==null&&/*#__PURE__*/_jsxs(\"h4\",{className:\"resultText\",children:[\"You got \",correctCount,\" out of \",questions.length,\" correct!\"]})]});};export default Quiz;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","Quiz","_ref","questions","selectedAnswers","setSelectedAnswers","Array","length","fill","currentQuestionIndex","setCurrentQuestionIndex","correctCount","setCorrectCount","handleAnswerClick","isCorrect","updatedAnswers","prev","nextQuestion","calculateScore","filter","answer","className","children","question","answers","map","index","onClick","style","backgroundColor","color","disabled","text","_"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/styles.css'\r\n\r\ninterface Answer {\r\n    text: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n    questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n    const [selectedAnswers, setSelectedAnswers] = useState<(boolean | null)[]>(Array(questions.length).fill(null));\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState<number | null>(null);\r\n\r\n    const handleAnswerClick = (isCorrect: boolean) => {\r\n        const updatedAnswers = [...selectedAnswers];\r\n        updatedAnswers[currentQuestionIndex] = isCorrect;\r\n        setSelectedAnswers(updatedAnswers);\r\n\r\n        if (isCorrect) {\r\n            setCorrectCount((prev) => (prev !== null ? prev + 1 : 1));\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        }\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        setCorrectCount(selectedAnswers.filter((answer) => answer === true).length);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='questionHeader'>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <hr />\r\n            <h3 className='questionText'>{questions[currentQuestionIndex].question}</h3>\r\n            <ul className='answerList'>\r\n                {questions[currentQuestionIndex].answers.map((answer, index) => (\r\n                    <li key={index} className='answerItem'>\r\n                        <button\r\n                            onClick={() => handleAnswerClick(answer.isCorrect)}\r\n                            className='answerButton'\r\n                            style={{\r\n                                backgroundColor:\r\n                                    selectedAnswers[currentQuestionIndex] !== null\r\n                                        ? answer.isCorrect\r\n                                            ? 'green'\r\n                                            : 'lightgrey'\r\n                                        : 'lightgrey',\r\n                                color: selectedAnswers[currentQuestionIndex] !== null ? '#fff' : '#000',\r\n                            }}\r\n                            disabled={selectedAnswers[currentQuestionIndex] !== null}\r\n                        >\r\n                            {answer.text}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n                <button className='nextButton' onClick={nextQuestion} disabled={selectedAnswers[currentQuestionIndex] === null}>\r\n                    Next\r\n                </button>\r\n            ) : (\r\n                <button className='nextButton' onClick={calculateScore}>\r\n                    Show Results\r\n                </button>\r\n            )}\r\n\r\n            <div className='progressContainer'>\r\n                {questions.map((_, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`progressCircle ${selectedAnswers[index] === true ? 'greenCircle' : ''}`}\r\n                    >\r\n                        {selectedAnswers[index] === true ? '✓' : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {correctCount !== null && (\r\n                <h4 className='resultText'>\r\n                    You got {correctCount} out of {questions.length} correct!\r\n                </h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
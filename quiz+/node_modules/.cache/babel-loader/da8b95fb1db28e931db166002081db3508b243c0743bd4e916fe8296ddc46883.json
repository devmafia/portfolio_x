{"ast":null,"code":"import React,{useState}from'react';import'../styles/styles.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Quiz=_ref=>{let{questions}=_ref;const[selectedAnswerIndex,setSelectedAnswerIndex]=useState(null);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[correctCount,setCorrectCount]=useState(0);const[progress,setProgress]=useState(Array(questions.length).fill(false));const[showResults,setShowResults]=useState(false);const handleAnswerClick=(index,isCorrect)=>{setSelectedAnswerIndex(index);if(isCorrect){setCorrectCount(prev=>prev+1);const updatedProgress=[...progress];updatedProgress[currentQuestionIndex]=true;setProgress(updatedProgress);}};const nextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);setSelectedAnswerIndex(null);}};const calculateScore=()=>{setShowResults(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"questionHeader\",children:[\"Question \",currentQuestionIndex+1,\" of \",questions.length]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{className:\"questionText\",children:questions[currentQuestionIndex].question}),/*#__PURE__*/_jsx(\"ul\",{className:\"answerList\",children:questions[currentQuestionIndex].answers.map((answer,index)=>{const isSelected=selectedAnswerIndex===index;const isCorrect=answer.isCorrect;return/*#__PURE__*/_jsx(\"li\",{className:\"answerItem\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerClick(index,isCorrect),className:\"answerButton\",style:{backgroundColor:isSelected?isCorrect?'green':'red':'lightgrey',color:isSelected?'white':'black'},disabled:selectedAnswerIndex!==null,children:answer.text})},index);})}),currentQuestionIndex<questions.length-1?/*#__PURE__*/_jsx(\"button\",{className:\"nextButton\",onClick:nextQuestion,disabled:selectedAnswerIndex===null,children:\"Next\"}):/*#__PURE__*/_jsx(\"button\",{className:\"nextButton\",onClick:calculateScore,children:\"Show Results\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progressContainer\",children:progress.map((isCorrect,index)=>/*#__PURE__*/_jsx(\"div\",{className:`progressCircle ${isCorrect?'greenCircle':''}`,children:isCorrect?'✓':''},index))}),showResults&&/*#__PURE__*/_jsxs(\"h4\",{className:\"resultText\",children:[\"You got \",correctCount,\" out of \",questions.length,\" correct!\"]})]});};export default Quiz;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","Quiz","_ref","questions","selectedAnswerIndex","setSelectedAnswerIndex","currentQuestionIndex","setCurrentQuestionIndex","correctCount","setCorrectCount","progress","setProgress","Array","length","fill","showResults","setShowResults","handleAnswerClick","index","isCorrect","prev","updatedProgress","nextQuestion","calculateScore","className","children","question","answers","map","answer","isSelected","onClick","style","backgroundColor","color","disabled","text"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/styles.css';\r\n\r\ninterface Answer {\r\n    text: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n    questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n    const [selectedAnswerIndex, setSelectedAnswerIndex] = useState<number | null>(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState<number>(0);\r\n    const [progress, setProgress] = useState<boolean[]>(Array(questions.length).fill(false));\r\n    const [showResults, setShowResults] = useState<boolean>(false);\r\n\r\n    const handleAnswerClick = (index: number, isCorrect: boolean) => {\r\n        setSelectedAnswerIndex(index);\r\n        if (isCorrect) {\r\n            setCorrectCount((prev) => prev + 1);\r\n            const updatedProgress = [...progress];\r\n            updatedProgress[currentQuestionIndex] = true;\r\n            setProgress(updatedProgress);\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            setSelectedAnswerIndex(null)\r\n        }\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        setShowResults(true);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='questionHeader'>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <hr />\r\n            <h3 className='questionText'>{questions[currentQuestionIndex].question}</h3>\r\n            <ul className='answerList'>\r\n                {questions[currentQuestionIndex].answers.map((answer, index) => {\r\n                    const isSelected = selectedAnswerIndex === index;\r\n                    const isCorrect = answer.isCorrect;\r\n\r\n                    return (\r\n                        <li key={index} className='answerItem'>\r\n                            <button\r\n                                onClick={() => handleAnswerClick(index, isCorrect)}\r\n                                className='answerButton'\r\n                                style={{\r\n                                    backgroundColor: isSelected \r\n                                        ? (isCorrect ? 'green' : 'red') \r\n                                        : 'lightgrey',\r\n                                    color: isSelected ? 'white' : 'black',\r\n                                }}\r\n                                disabled={selectedAnswerIndex !== null}\r\n                            >\r\n                                {answer.text}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n                <button className='nextButton' onClick={nextQuestion} disabled={selectedAnswerIndex === null}>\r\n                    Next\r\n                </button>\r\n            ) : (\r\n                <button className='nextButton' onClick={calculateScore}>\r\n                    Show Results\r\n                </button>\r\n            )}\r\n\r\n            <div className='progressContainer'>\r\n                {progress.map((isCorrect, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`progressCircle ${isCorrect ? 'greenCircle' : ''}`}\r\n                    >\r\n                        {isCorrect ? '✓' : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n            { showResults && (\r\n                    <h4 className='resultText'>\r\n                        You got {correctCount} out of {questions.length} correct!\r\n                    </h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
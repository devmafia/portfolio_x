{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\lenovo\\\\htdocs\\\\Reactjs_practice\\\\quiz\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [progress, setProgress] = useState(Array(questions.length).fill(false));\n  const handleAnswerClick = (index, isCorrect) => {\n    setSelectedAnswerIndex(index);\n    if (isCorrect) {\n      setCorrectCount(prev => prev + 1);\n      const updatedProgress = [...progress];\n      updatedProgress[currentQuestionIndex] = true;\n      setProgress(updatedProgress);\n    }\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedAnswerIndex(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"questionHeader\",\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"questionText\",\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answerList\",\n      children: questions[currentQuestionIndex].answers.map((answer, index) => {\n        const isSelected = selectedAnswerIndex === index;\n        const isCorrect = answer.isCorrect;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"answerItem\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerClick(index, isCorrect),\n            className: \"answerButton\",\n            style: {\n              backgroundColor: isSelected ? isCorrect ? 'green' : 'red' : 'lightgrey',\n              color: isSelected ? 'white' : 'black'\n            },\n            disabled: selectedAnswerIndex !== null,\n            children: answer.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: nextQuestion,\n      disabled: selectedAnswerIndex === null,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: calculateScore,\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressContainer\",\n      children: progress.map((isCorrect, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progressCircle ${isCorrect ? 'greenCircle' : ''}`,\n        children: isCorrect ? '✓' : ''\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), correctCount > 0 && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"resultText\",\n      children: [\"You got \", correctCount, \" out of \", questions.length, \" correct!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"Aj8RbW7Zpw6UQD0M23caaZhl4Pw=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","questions","_s","selectedAnswerIndex","setSelectedAnswerIndex","currentQuestionIndex","setCurrentQuestionIndex","correctCount","setCorrectCount","progress","setProgress","Array","length","fill","handleAnswerClick","index","isCorrect","prev","updatedProgress","nextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","answers","map","answer","isSelected","onClick","style","backgroundColor","color","disabled","text","calculateScore","_c","$RefreshReg$"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/styles.css';\r\n\r\ninterface Answer {\r\n    text: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n    questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n    const [selectedAnswerIndex, setSelectedAnswerIndex] = useState<number | null>(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState<number>(0);\r\n    const [progress, setProgress] = useState<boolean[]>(Array(questions.length).fill(false));\r\n\r\n    const handleAnswerClick = (index: number, isCorrect: boolean) => {\r\n        setSelectedAnswerIndex(index);\r\n        if (isCorrect) {\r\n            setCorrectCount((prev) => prev + 1);\r\n            const updatedProgress = [...progress];\r\n            updatedProgress[currentQuestionIndex] = true;\r\n            setProgress(updatedProgress);\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            setSelectedAnswerIndex(null)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='questionHeader'>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <hr />\r\n            <h3 className='questionText'>{questions[currentQuestionIndex].question}</h3>\r\n            <ul className='answerList'>\r\n                {questions[currentQuestionIndex].answers.map((answer, index) => {\r\n                    const isSelected = selectedAnswerIndex === index;\r\n                    const isCorrect = answer.isCorrect;\r\n\r\n                    return (\r\n                        <li key={index} className='answerItem'>\r\n                            <button\r\n                                onClick={() => handleAnswerClick(index, isCorrect)}\r\n                                className='answerButton'\r\n                                style={{\r\n                                    backgroundColor: isSelected \r\n                                        ? (isCorrect ? 'green' : 'red') \r\n                                        : 'lightgrey',\r\n                                    color: isSelected ? 'white' : 'black',\r\n                                }}\r\n                                disabled={selectedAnswerIndex !== null}\r\n                            >\r\n                                {answer.text}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n                <button className='nextButton' onClick={nextQuestion} disabled={selectedAnswerIndex === null}>\r\n                    Next\r\n                </button>\r\n            ) : (\r\n                <button className='nextButton' onClick={calculateScore}>\r\n                    Show Results\r\n                </button>\r\n            )}\r\n\r\n            <div className='progressContainer'>\r\n                {progress.map((isCorrect, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`progressCircle ${isCorrect ? 'greenCircle' : ''}`}\r\n                    >\r\n                        {isCorrect ? '✓' : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {correctCount > 0 && (\r\n                <h4 className='resultText'>\r\n                    You got {correctCount} out of {questions.length} correct!\r\n                </h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\lenovo\\\\htdocs\\\\Reactjs_practice\\\\quiz\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions\n}) => {\n  _s();\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctCount, setCorrectCount] = useState(null);\n  const handleAnswerClick = (index, isCorrect) => {\n    setSelectedAnswerIndex(index);\n    if (isCorrect) {\n      setCorrectCount(prev => prev !== null ? prev + 1 : 1);\n    }\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedAnswerIndex(null); // Reset for the next question\n    }\n  };\n  const calculateScore = () => {\n    setCorrectCount(selectedAnswerIndex !== null && questions[currentQuestionIndex].answers[selectedAnswerIndex].isCorrect ? (correctCount !== null && correctCount !== void 0 ? correctCount : 0) + 1 : correctCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"questionHeader\",\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"questionText\",\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answerList\",\n      children: questions[currentQuestionIndex].answers.map((answer, index) => {\n        const isSelected = selectedAnswerIndex === index;\n        const isCorrect = answer.isCorrect;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"answerItem\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerClick(index, isCorrect),\n            className: \"answerButton\",\n            style: {\n              backgroundColor: isSelected ? isCorrect ? 'green' : 'red' : 'lightgrey',\n              color: isSelected ? 'white' : 'black'\n            },\n            disabled: selectedAnswerIndex !== null,\n            children: answer.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: nextQuestion,\n      disabled: selectedAnswerIndex === null,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nextButton\",\n      onClick: calculateScore,\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressContainer\",\n      children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progressCircle ${selectedAnswerIndex === index && questions[currentQuestionIndex].answers[index].isCorrect ? 'greenCircle' : ''}`,\n        children: selectedAnswerIndex === index && questions[currentQuestionIndex].answers[index].isCorrect ? '✓' : ''\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), correctCount !== null && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"resultText\",\n      children: [\"You got \", correctCount, \" out of \", questions.length, \" correct!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"aRp6r7HdLzhtHttc1El4HWeoZes=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","questions","_s","selectedAnswerIndex","setSelectedAnswerIndex","currentQuestionIndex","setCurrentQuestionIndex","correctCount","setCorrectCount","handleAnswerClick","index","isCorrect","prev","nextQuestion","length","calculateScore","answers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","answer","isSelected","onClick","style","backgroundColor","color","disabled","text","_","_c","$RefreshReg$"],"sources":["C:/Users/User/lenovo/htdocs/Reactjs_practice/quiz/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/styles.css';\r\n\r\ninterface Answer {\r\n    text: string;\r\n    isCorrect: boolean;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface QuizProps {\r\n    questions: Question[];\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({ questions }) => {\r\n    const [selectedAnswerIndex, setSelectedAnswerIndex] = useState<number | null>(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [correctCount, setCorrectCount] = useState<number | null>(null);\r\n\r\n    const handleAnswerClick = (index: number, isCorrect: boolean) => {\r\n        setSelectedAnswerIndex(index);\r\n        if (isCorrect) {\r\n            setCorrectCount((prev) => (prev !== null ? prev + 1 : 1));\r\n        }\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            setSelectedAnswerIndex(null); // Reset for the next question\r\n        }\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        setCorrectCount(selectedAnswerIndex !== null && questions[currentQuestionIndex].answers[selectedAnswerIndex].isCorrect \r\n            ? (correctCount ?? 0) + 1 \r\n            : correctCount);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='questionHeader'>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <hr />\r\n            <h3 className='questionText'>{questions[currentQuestionIndex].question}</h3>\r\n            <ul className='answerList'>\r\n                {questions[currentQuestionIndex].answers.map((answer, index) => {\r\n                    const isSelected = selectedAnswerIndex === index;\r\n                    const isCorrect = answer.isCorrect;\r\n\r\n                    return (\r\n                        <li key={index} className='answerItem'>\r\n                            <button\r\n                                onClick={() => handleAnswerClick(index, isCorrect)}\r\n                                className='answerButton'\r\n                                style={{\r\n                                    backgroundColor: isSelected \r\n                                        ? (isCorrect ? 'green' : 'red') \r\n                                        : 'lightgrey',\r\n                                    color: isSelected ? 'white' : 'black',\r\n                                }}\r\n                                disabled={selectedAnswerIndex !== null}\r\n                            >\r\n                                {answer.text}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            {currentQuestionIndex < questions.length - 1 ? (\r\n                <button className='nextButton' onClick={nextQuestion} disabled={selectedAnswerIndex === null}>\r\n                    Next\r\n                </button>\r\n            ) : (\r\n                <button className='nextButton' onClick={calculateScore}>\r\n                    Show Results\r\n                </button>\r\n            )}\r\n\r\n            <div className='progressContainer'>\r\n                {questions.map((_, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`progressCircle ${selectedAnswerIndex === index && questions[currentQuestionIndex].answers[index].isCorrect ? 'greenCircle' : ''}`}\r\n                    >\r\n                        {selectedAnswerIndex === index && questions[currentQuestionIndex].answers[index].isCorrect ? '✓' : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {correctCount !== null && (\r\n                <h4 className='resultText'>\r\n                    You got {correctCount} out of {questions.length} correct!\r\n                </h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}